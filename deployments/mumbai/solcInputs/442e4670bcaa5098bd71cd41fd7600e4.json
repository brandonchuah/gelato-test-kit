{
  "language": "Solidity",
  "sources": {
    "contracts/callbacks/Callback.sol": {
      "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.18;\n\ncontract Callback {\n    mapping(address => uint256) public count;\n    mapping(address => uint256) public lastExecuted;\n\n    function increaseCount() external {\n        count[msg.sender] += 1;\n        lastExecuted[msg.sender] = block.timestamp;\n    }\n\n    function increaseCountStrict(uint256 _interval) external {\n        uint256 _lastExecuted = lastExecuted[msg.sender];\n\n        require(\n            block.timestamp > _lastExecuted + _interval,\n            \"Callback: interval not elapsed\"\n        );\n\n        count[msg.sender] += 1;\n        lastExecuted[msg.sender] = block.timestamp;\n    }\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}